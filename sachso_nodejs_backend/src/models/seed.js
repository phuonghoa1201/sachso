// const mongoose = require("mongoose");
// require("dotenv").config();

// const Grade = require("./question/grade");
// const Skill = require("./question/skill");
// const QuestionType = require("./question/questionType");
// const CognitionLevel = require("./question/cognitionLevel");
// const Unit = require("./question/unit");
// const Question = require("./question/question")

// const seed = async () => {
//   try {
//     await mongoose.connect(process.env.MONGO_DB_URL);

//     console.log("‚úÖ Connected to MongoDB");

//     const questionData = {
//       content: "What is the capital of France?",
//       unitId: "6895c04766d6e5473e3d484d",          // Thay b·∫±ng ObjectId th·∫≠t c·ªßa b·∫°n
//       gradeId: "689330784d3b4a2b25729f81",        // Thay b·∫±ng ObjectId th·∫≠t c·ªßa b·∫°n
//       skillId: "689330784d3b4a2b25729f8e",         // "L" skill
//       cognitionLevelId: "689330784d3b4a2b25729f96", // "Nh·∫≠n bi·∫øt"
//       requirement:"Listen, read and tick the correct answer.",
//       questionTypeId: "689330784d3b4a2b25729f93", // Thay b·∫±ng ObjectId th·∫≠t c·ªßa b·∫°n
//       answerType: "text",
//       answers: [
//         { content: "Paris", isCorrect: true },
//         { content: "London", isCorrect: false },
//         { content: "Berlin", isCorrect: false },
//         { content: "Madrid", isCorrect: false }
//       ],
//       // createdAt: new Date(),
//       // updatedAt: new Date()
//     };

//     const newQuestion = new Question(questionData);
//     await newQuestion.save();

//     console.log("Seed question th√†nh c√¥ng:", newQuestion._id);

//     await mongoose.disconnect();
//   } catch (error) {
//     console.error("L·ªói khi seed question:", error);
//   }
// }


// seed();
// seedClass.js
const mongoose = require("mongoose");
require("dotenv").config();
const { customAlphabet } = require("nanoid");
const Class = require("./class/class"); // ƒë∆∞·ªùng d·∫´n t·ªõi file model Class

// Kh·ªüi t·∫°o h√†m sinh shortCode g·ªìm 6 k√Ω t·ª± A-Z0-9
const nanoid = customAlphabet("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ", 6);

const seed = async () => {
  try {
    await mongoose.connect(process.env.MONGO_DB_URL);
    console.log("‚úÖ Connected to MongoDB");

    // X√≥a d·ªØ li·ªáu c≈© tr∆∞·ªõc khi seed
    await Class.deleteMany({});
    console.log("üóëÔ∏è ƒê√£ x√≥a d·ªØ li·ªáu c≈©");

    // D·ªØ li·ªáu test cho l·ªõp h·ªçc
    const classesData = [
      { gradeId: "689330784d3b4a2b25729f81", nameofClass: "L·ªõp 1A", noteClass: "Ghi ch√∫ l·ªõp 1A" },
      { gradeId: "689330784d3b4a2b25729f82", nameofClass: "L·ªõp 2B", noteClass: "Ghi ch√∫ l·ªõp 2B" },
      { gradeId: "689330784d3b4a2b25729f83", nameofClass: "L·ªõp 3C", noteClass: "Ghi ch√∫ l·ªõp 3C" },
    ];

    for (let cls of classesData) {
      const newClass = new Class({
        ...cls,
        shortCode: nanoid(), // th√™m shortCode khi seed
        totalStudent: 0 
      });
      await newClass.save();
      console.log("‚úÖ Seed class th√†nh c√¥ng:", newClass.nameofClass, "-", newClass.shortCode);
    }
  } catch (error) {
    console.error("‚ùå L·ªói khi seed class:", error);
  } finally {
    await mongoose.disconnect();
    console.log("üîå Disconnected from MongoDB");
  }
};

seed();


